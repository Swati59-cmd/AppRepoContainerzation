name: App Image CI

on:
  push:
    branches: [dev, stage, main]
  

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      AWS_REGION: us-east-1
      IMAGE_TAG: ${{ github.sha }}
      ECR_REPO_NAME: ${{ github.ref_name == 'dev' && 'devpython' || github.ref_name == 'stage' && 'stagepython' || 'prodpython' }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and Push Docker Image
        run: |
          docker build -t $ECR_REPO_NAME:$IMAGE_TAG .
          docker tag $ECR_REPO_NAME:$IMAGE_TAG ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPO_NAME:$IMAGE_TAG
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPO_NAME:$IMAGE_TAG

      - name: Trigger Terraform Deploy Repo
        uses: peter-evans/repository-dispatch@v2
        with:
          token: ${{ secrets.REPO_B_ACCESS_TOKEN }}
          repository: "Swati59-cmd/Containerized-Web-Application"
          event-type: deploy-${{ github.ref_name }}
          client-payload: >-
            {
              "image_tag": "${{ github.sha }}",
              "ecr_repo_name": "${{ env.ECR_REPO_NAME }}",
              "environment": "${{ github.ref_name }}"
            }
